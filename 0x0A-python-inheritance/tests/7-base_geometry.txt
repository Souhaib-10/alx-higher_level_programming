==============================
How to use 7-base_geometry.py
==============================

Instantiation
=============

`BaseGeometry` not pass arguments need to have instance from this class

::

	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
	>>> bg = BaseGeometry()
	>>> type(bg)
	<class '7-base_geometry.BaseGeometry'>

::

    	>>> print(bg) # doctest: +ELLIPSIS
    	<7-base_geometry.BaseGeometry object at ...>

::

	 >>> bg = BaseGeometry(None)
         Traceback (most recent call last):
		...
         TypeError: BaseGeometry() takes no arguments

Methods
========

::

	>>> bg = BaseGeometry()
	>>> print(bg.area) # doctest: +ELLIPSIS, +NORMALIZE_WHITESPACE
	<bound method BaseGeometry.area of <7-base_geometry.BaseGeometry object at...>>

::

	>>> bg.area()
	Traceback (most recent call last):
        Exception: area() is not implemented

::

	>>> bg.integer_validator("my_int", 12)
	
::

	>>> bg.integer_validator("width", 89)
	
::

	>>> bg.integer_validator("name", "John")
	Traceback (most recent call last):
        TypeError: name must be an integer

::

	>>> bg.integer_validator("age", 0)
	Traceback (most recent call last):
	ValueError: age must be greater than 0

::

	>>> bg.integer_validator("distance", -4)
	Traceback (most recent call last):
	ValueError: distance must be greater than 0

::

	>>> bg.integer_validator("tuple", (1,))
        Traceback (most recent call last):
        TypeError: tuple must be an integer

::

        >>> bg.integer_validator("table", [3])
        Traceback (most recent call last):
        TypeError: table must be an integer

::

        >>> bg.integer_validator("object", {3, 4})
        Traceback (most recent call last):
        TypeError: object must be an integer

::

        >>> bg.integer_validator("args none", None)
        Traceback (most recent call last):
        TypeError: args none must be an integer
